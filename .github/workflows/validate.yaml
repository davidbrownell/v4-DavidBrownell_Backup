# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
#
# This file is the result of a code generation process; any changes made
# to this file will be overwritten during the next code generation
# invocation. Any changes MUST be made in the source file rather than in
# this one.
#
#     Code Generator:         Jinja2
#     Input Filename:         workflows/validate.jinja2.yaml
#
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------

# ----------------------------------------------------------------------
# |
# |  validate.yaml
# |
# |  David Brownell <db@DavidBrownell.com>
# |      2022-11-17 10:10:35
# |
# ----------------------------------------------------------------------
# |
# |  Copyright David Brownell 2022
# |  Distributed under the Boost Software License, Version 1.0. See
# |  accompanying file LICENSE_1_0.txt or copy at
# |  http://www.boost.org/LICENSE_1_0.txt.
# |
# ----------------------------------------------------------------------
name: "[callable] Validates DavidBrownell_Backup"

on:
  workflow_call:
    inputs:
      repo_branch:                          {type: string, required: true}
      force_setup:                          {type: boolean, required: false, default: false}
      force_activate:                       {type: boolean, required: false, default: false}
      no_cache:                             {type: boolean, required: false, default: false}

      bootstrap_branch_overrides:           {type: string, required: false}

jobs:
  _c39220c5-930d-44c6-a3b7-508c7ec3e9e5:
    name: "Build and Test: standard"

    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

    uses: davidbrownell/v4-Common_Foundation/.github/workflows/callable_validate.yaml@CI-ExperimentalCache # TODO: CI-latest
    with:
      job_name_prefix:                      "DavidBrownell_Backup"
      repo_name:                            davidbrownell/v4-DavidBrownell_Backup
      repo_branch:                          ${{ inputs.repo_branch }}
      bootstrap_branch_overrides:           ${{ inputs.bootstrap_branch_overrides }}

      os:                                   ${{ matrix.os }}
      configuration:                        standard

      run_Builder:                          true
      run_MatchTests:                       true

      force_setup:                          ${{ inputs.force_setup }}
      force_activate:                       ${{ inputs.force_activate }}
      no_cache:                             ${{ inputs.no_cache }}

      # Use the following values to control how different test types are run:
      #
      #   0: Do not run these test types
      #   1: Run these test types without code coverage
      #   2: Run these test types with code coverage
      #   3: Run these test types with and without code coverage

      execute_UnitTests:                    3
      execute_FunctionalTests:              1
      execute_IntegrationTests:             1
      execute_SystemTests:                  1
      execute_LocalEndToEndTests:           1
      execute_EndToEndTests:                0
      execute_BuildVerificationTests:       1
      execute_PerformanceTests:             0

# Note that we aren't using a matrix for the os here as we want to increase overall throughput
# (rather than forcing the binary validation job to wait until all of the dev jobs are complete).
  # ----------------------------------------------------------------------
  # |
  # |  macos-latest
  # |
  # ----------------------------------------------------------------------
  _d20cacc8-cd46-4a4f-bf0f-2bc6be2c803f:
    name: "Build and Test: dev"
    uses: davidbrownell/v4-Common_PythonDevelopment/.github/workflows/callable_validate.yaml@CI-ExperimentalCache # TODO: CI-latest
    with:
      job_name_prefix:                      "DavidBrownell_Backup"
      repo_name:                            davidbrownell/v4-DavidBrownell_Backup
      repo_branch:                          ${{ inputs.repo_branch }}
      bootstrap_branch_overrides:           ${{ inputs.bootstrap_branch_overrides }}

      os:                                   macos-latest
      configuration:                        dev

      run_PylintVerifier:                   true
      run_Builder:                          true
      run_MatchTests:                       true

      force_setup:                          ${{ inputs.force_setup }}
      force_activate:                       ${{ inputs.force_activate }}
      no_cache:                             ${{ inputs.no_cache }}

      # Use the following values to control how different test types are run:
      #
      #   0: Do not run these test types
      #   1: Run these test types without code coverage
      #   2: Run these test types with code coverage
      #   3: Run these test types with and without code coverage

      execute_UnitTests:                    3
      execute_FunctionalTests:              1
      execute_IntegrationTests:             1
      execute_SystemTests:                  1
      execute_LocalEndToEndTests:           1
      execute_EndToEndTests:                0
      execute_BuildVerificationTests:       1
      execute_PerformanceTests:             0

  _8a65bbd6-f03d-417b-9a36-f4757c2f4cde:
    name: "DavidBrownell_Backup (macos-latest, dev binaries)"
    runs-on:                                macos-latest
    needs:
      - _d20cacc8-cd46-4a4f-bf0f-2bc6be2c803f

    steps:
      - name: "[Impl] Dump Contexts"
        if: ${{ startsWith('macos-latest', 'ubuntu') }}
        uses: davidbrownell/v4-Common_Foundation/.github/actions/dump_contexts@CI-v1

      # outputs:
      #   - local_script_prefix
      #   - script_extension
      #   - shell_name
      #   - source_command
      #   - sudo_command
      #   - working_dir
      #
      - name: "[Impl] Initialize OS-Specific Variables"
        id: initialize
        uses: davidbrownell/v4-Common_Foundation/.github/actions/initialize@CI-v1
        with:
          os:                               macos-latest

      # outputs:
      #   - archive_prefix
      #   - repo_name
      #   - repo_dir
      #
      - name: Checkout Source
        id: checkout_source
        uses: davidbrownell/v4-Common_Foundation/.github/actions/checkout_source@CI-v1
        with:
          repo_name:                        davidbrownell/v4-DavidBrownell_Backup
          repo_branch:                      ${{ inputs.repo_branch }}

          os:                               macos-latest
          configuration:                    dev

          shell_name:                       ${{ steps.initialize.outputs.shell_name }}
          working_dir:                      ${{ steps.initialize.outputs.working_dir }}

      - name: Unbundle Build Artifacts
        id: unbundle
        uses: davidbrownell/v4-Common_Foundation/.github/actions/unbundle_builder_artifacts@CI-latest
        with:
          archive_prefix:                   ${{ steps.checkout_source.outputs.archive_prefix }}
          artifacts_path:                   Scripts/Backup/Build

          os:                               macos-latest

          shell_name:                       ${{ steps.initialize.outputs.shell_name }}
          working_dir:                      ${{ steps.initialize.outputs.working_dir }}

      - name: Run Test
        run: |
          python3 "${{ steps.checkout_source.outputs.repo_dir }}/Scripts/Backup/BinaryTests/Binary_BuildVerificationTest.py" "${{ steps.unbundle.outputs.artifacts_dir }}"

  # ----------------------------------------------------------------------
  # |
  # |  ubuntu-latest
  # |
  # ----------------------------------------------------------------------
  _9b2329fc-8bd8-41e7-bec3-344d7169f1aa:
    name: "Build and Test: dev"
    uses: davidbrownell/v4-Common_PythonDevelopment/.github/workflows/callable_validate.yaml@CI-ExperimentalCache # TODO: CI-latest
    with:
      job_name_prefix:                      "DavidBrownell_Backup"
      repo_name:                            davidbrownell/v4-DavidBrownell_Backup
      repo_branch:                          ${{ inputs.repo_branch }}
      bootstrap_branch_overrides:           ${{ inputs.bootstrap_branch_overrides }}

      os:                                   ubuntu-latest
      configuration:                        dev

      run_PylintVerifier:                   true
      run_Builder:                          true
      run_MatchTests:                       true

      force_setup:                          ${{ inputs.force_setup }}
      force_activate:                       ${{ inputs.force_activate }}
      no_cache:                             ${{ inputs.no_cache }}

      # Use the following values to control how different test types are run:
      #
      #   0: Do not run these test types
      #   1: Run these test types without code coverage
      #   2: Run these test types with code coverage
      #   3: Run these test types with and without code coverage

      execute_UnitTests:                    3
      execute_FunctionalTests:              1
      execute_IntegrationTests:             1
      execute_SystemTests:                  1
      execute_LocalEndToEndTests:           1
      execute_EndToEndTests:                0
      execute_BuildVerificationTests:       1
      execute_PerformanceTests:             0

  _1d86e954-8cfd-4d37-8207-3da9ffe2574c:
    name: "DavidBrownell_Backup (ubuntu-latest, dev binaries)"
    runs-on:                                ubuntu-latest
    needs:
      - _9b2329fc-8bd8-41e7-bec3-344d7169f1aa

    steps:
      - name: "[Impl] Dump Contexts"
        if: ${{ startsWith('ubuntu-latest', 'ubuntu') }}
        uses: davidbrownell/v4-Common_Foundation/.github/actions/dump_contexts@CI-v1

      # outputs:
      #   - local_script_prefix
      #   - script_extension
      #   - shell_name
      #   - source_command
      #   - sudo_command
      #   - working_dir
      #
      - name: "[Impl] Initialize OS-Specific Variables"
        id: initialize
        uses: davidbrownell/v4-Common_Foundation/.github/actions/initialize@CI-v1
        with:
          os:                               ubuntu-latest

      # outputs:
      #   - archive_prefix
      #   - repo_name
      #   - repo_dir
      #
      - name: Checkout Source
        id: checkout_source
        uses: davidbrownell/v4-Common_Foundation/.github/actions/checkout_source@CI-v1
        with:
          repo_name:                        davidbrownell/v4-DavidBrownell_Backup
          repo_branch:                      ${{ inputs.repo_branch }}

          os:                               ubuntu-latest
          configuration:                    dev

          shell_name:                       ${{ steps.initialize.outputs.shell_name }}
          working_dir:                      ${{ steps.initialize.outputs.working_dir }}

      - name: Unbundle Build Artifacts
        id: unbundle
        uses: davidbrownell/v4-Common_Foundation/.github/actions/unbundle_builder_artifacts@CI-latest
        with:
          archive_prefix:                   ${{ steps.checkout_source.outputs.archive_prefix }}
          artifacts_path:                   Scripts/Backup/Build

          os:                               ubuntu-latest

          shell_name:                       ${{ steps.initialize.outputs.shell_name }}
          working_dir:                      ${{ steps.initialize.outputs.working_dir }}

      - name: Run Test
        run: |
          python3 "${{ steps.checkout_source.outputs.repo_dir }}/Scripts/Backup/BinaryTests/Binary_BuildVerificationTest.py" "${{ steps.unbundle.outputs.artifacts_dir }}"

  # ----------------------------------------------------------------------
  # |
  # |  windows-latest
  # |
  # ----------------------------------------------------------------------
  _e21d578a-7ed2-4ad8-a3b7-f915702e3833:
    name: "Build and Test: dev"
    uses: davidbrownell/v4-Common_PythonDevelopment/.github/workflows/callable_validate.yaml@CI-ExperimentalCache # TODO: CI-latest
    with:
      job_name_prefix:                      "DavidBrownell_Backup"
      repo_name:                            davidbrownell/v4-DavidBrownell_Backup
      repo_branch:                          ${{ inputs.repo_branch }}
      bootstrap_branch_overrides:           ${{ inputs.bootstrap_branch_overrides }}

      os:                                   windows-latest
      configuration:                        dev

      run_PylintVerifier:                   true
      run_Builder:                          true
      run_MatchTests:                       true

      force_setup:                          ${{ inputs.force_setup }}
      force_activate:                       ${{ inputs.force_activate }}
      no_cache:                             ${{ inputs.no_cache }}

      # Use the following values to control how different test types are run:
      #
      #   0: Do not run these test types
      #   1: Run these test types without code coverage
      #   2: Run these test types with code coverage
      #   3: Run these test types with and without code coverage

      execute_UnitTests:                    3
      execute_FunctionalTests:              1
      execute_IntegrationTests:             1
      execute_SystemTests:                  1
      execute_LocalEndToEndTests:           1
      execute_EndToEndTests:                0
      execute_BuildVerificationTests:       1
      execute_PerformanceTests:             0

  _0373e8df-934e-419c-b2f9-c30e5e3bece0:
    name: "DavidBrownell_Backup (windows-latest, dev binaries)"
    runs-on:                                windows-latest
    needs:
      - _e21d578a-7ed2-4ad8-a3b7-f915702e3833

    steps:
      - name: "[Impl] Dump Contexts"
        if: ${{ startsWith('windows-latest', 'ubuntu') }}
        uses: davidbrownell/v4-Common_Foundation/.github/actions/dump_contexts@CI-v1

      # outputs:
      #   - local_script_prefix
      #   - script_extension
      #   - shell_name
      #   - source_command
      #   - sudo_command
      #   - working_dir
      #
      - name: "[Impl] Initialize OS-Specific Variables"
        id: initialize
        uses: davidbrownell/v4-Common_Foundation/.github/actions/initialize@CI-v1
        with:
          os:                               windows-latest

      # outputs:
      #   - archive_prefix
      #   - repo_name
      #   - repo_dir
      #
      - name: Checkout Source
        id: checkout_source
        uses: davidbrownell/v4-Common_Foundation/.github/actions/checkout_source@CI-v1
        with:
          repo_name:                        davidbrownell/v4-DavidBrownell_Backup
          repo_branch:                      ${{ inputs.repo_branch }}

          os:                               windows-latest
          configuration:                    dev

          shell_name:                       ${{ steps.initialize.outputs.shell_name }}
          working_dir:                      ${{ steps.initialize.outputs.working_dir }}

      - name: Unbundle Build Artifacts
        id: unbundle
        uses: davidbrownell/v4-Common_Foundation/.github/actions/unbundle_builder_artifacts@CI-latest
        with:
          archive_prefix:                   ${{ steps.checkout_source.outputs.archive_prefix }}
          artifacts_path:                   Scripts/Backup/Build

          os:                               windows-latest

          shell_name:                       ${{ steps.initialize.outputs.shell_name }}
          working_dir:                      ${{ steps.initialize.outputs.working_dir }}

      - name: Run Test
        run: |
          python3 "${{ steps.checkout_source.outputs.repo_dir }}/Scripts/Backup/BinaryTests/Binary_BuildVerificationTest.py" "${{ steps.unbundle.outputs.artifacts_dir }}"

